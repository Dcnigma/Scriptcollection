# The Ore game 1.0
# by Dcnigma
#
# The goal of the game is to be the player with the most points,
# in order to get &cpoints&f you need to mine ores,
# each ore has a set value of points,
# emeralds  7
# diamonds  5
# gold      3
# lapis     1
# redstone  1
# iron      0.5
# copper    0.5
# coal      0.5
#
# This is a heavily modified version of Abba Caving 1.0
# source: https://forums.skunity.com/resources/abba-caving.715/
#
# Whats New in my version?
# --------------------------------
# - Updated for the new deepslate versions of the ores.
#	- Added message "don't cheat! When placing a ore-block in game"
#	- Added a reward system.
#	- Added a check for a Draw game.
# - Added a option to save your inventory before caving.
# - Added a option to give players extra items to start,
#		 like torchs; and these get removed if they stop, disconnect or win the Game.
# - If you accept the game it saved your location before you start the game,
#   	this will tp you back to where you accepted the game at the end of the game.
#	- Added a xzy location for the players to tp @ to start the game. Chose your Cave.
#	  look for a good start location for your players and fill in the values
#	   on the todo: create a system for more locations so it will be (more) random.



options:
	prefix: &e[&6The Ore Game&e] &r
	goal: &r&fThe goal of the game is to be the player with the most &cpoints&f, in order to get &cpoints&f you need to &amine ores&f, each ore has a set value of &cpoints&f, &aemeralds &c7&f, &bdiamonds &c5&f, &6gold &c3&f, &9lapis &c1&f, &4redstone &c1&f, &7iron &c0.5 &3copper, &c0.5 &fand &7coal &c0.5
	time: 5 minutes #2 60 seconds
	# Set location player one
	xp1 : 144
	yp1 : 188
	zp1 : 69
	# Set location player two
	xp2 : 146
	yp2 : 188
	zp2 : 69
	# Set world location.
	world : Blocktopolis

on script unload:
	delete {tog::temp::*}


command /tog [<text>] [<player>]:
	#permission: tog.start
	trigger:
		if argument 1 is not set:
			message "-------------------------------------"
			message "&l&6The Ore Game!!!!"
			message "{@goal}"
			message "---------------------------------------------"
			message "       &e<> = required [] = optional"
			message "{@prefix}/tog - &eBring up this menu"
			message "{@prefix}/tog quit - &eLeave a game                           &cDon't Stop if you put items in the chest, you will lose them [bewarend]!"
			message "{@prefix}/tog accept <user> - &eAccept an invite"
			message "{@prefix}/tog invite <user> - &eInvite a user to play"
			message "{@prefix}/tog highscore [user] - &eView highscores"
		else if argument 2 is not set:
			if argument 1 is "info" or "information":
				message "{@goal}"
			if argument 1 is "highscore":
				if {tog::player::%player%::highscore} is not set:
					set {tog::player::%player%::highscore} to 0
				message "{@prefix}Your highscore is &l%{tog::player::%player%::highscore}%"
			else if argument 1 is "quit", "stop" or "leave":
				if {tog::temp::playing::%player%} is set:
					message "{@prefix}The user %player% has quit the game" to player and {tog::temp::playing::%player%}
					teleport player to {_oldLocation}
					teleport argument 2 to {_oldLocationp2}
					open {_inventory} to player
					open {_inventoryp2} to argument 2
					remove all torch from player
					remove all torch from argument 2
					delete {tog::temp::playing::%player%}

				else:
					message "{@prefix}You aren't in a game!"
		else:
			if argument 1 is "invite":
				send title "{@prefix}" with subtitle "&aDon't bring torchs!!" to player and argument 2 for 5 seconds
				message "{@prefix}%player% wants to play you a game in The Ore Game, rules will be explained. Do you wanna play? Type /&ltog accept %player%" to argument 2
				message "{@prefix}&aDon't bring torchs!!" to argument 2 and player
				message "{@prefix}You sent an invite to %argument 2%."
				set {_oldLocation} to location of player
				set {_oldLocationp2} to location of argument 2
				set {tog::temp::invite::%argument 2%} to player
				message "-------------------------------------"
				message "{@goal}"
				message "---------------------------------------------"
				wait 2 minutes
				delete {tog::temp::invite::%player%} and {tog::temp::invite::%argument 2%}
			else if argument 1 is "accept":
				if {tog::temp::invite::%player%} is argument 2:
					set {tog::temp::invite::%argument 2%} to player
					set {_oldLocation} to location of player
					set {_oldLocationp2} to location of argument 2
					set {tog::temp::invite::%argument 2%} to player
					execute player command "tog play %argument 2%"
				else:
					message "{@prefix}You have no invite from %argument 2%"
			else if argument 1 is "highscore":
				if {tog::player::%argument 2%::highscore} is not set:
					set {tog::player::%argument 2%::highscore} to 0
				message "{@prefix}%argument 2%'s highscore is &l%{tog::player::%argument 2%::highscore}%"
			else if argument 1 is "play":
				if {tog::temp::invite::%player%} is not argument 2:
					message "{@prefix}This user has not accepted the invite yet" to player
					stop
				if {tog::temp::invite::%argument 2%} is not player:
					message "{@prefix}This user has not accepted the invite yet" to player
					stop
				delete {tog::temp::invite::%player%} and {tog::temp::invite::%argument 2%}
				set {tog::temp::invite::%player%} to argument 2
				set {tog::temp::invite::%argument 2%} to player
				send title "Waiting 1 minute" with subtitle "to store your items &aDon't bring torchs!" to player and argument 2 for 5 seconds
				message "{@prefix}&aDon't bring torchs, put them away if you don't want to lose them!!" to argument 2 and player
				wait 5 seconds
				open chest inventory with 4 row named "[The ORE Game] Chest player" to player
				set {_inventory} to chest inventory named "[The ORE Game] Chest player"
				open chest inventory with 4 row named "[The ORE Game] Chest Player 2" to argument 2
				set {_inventoryp2} to chest inventory named "[The ORE Game] Chest Player 2"

				set {_oldLocation} to location of player
				set {_oldLocationp2} to location of argument 2

				open {_inventory} to player
				open {_inventoryp2} to argument 2
				wait 5 seconds
				send action bar "{@prefix}The game will start in 60!" to player and argument 2
				message "-------------------------------------" to player and argument 2
				wait 5 seconds
				send action bar "{@prefix}The game will start in 55!" to player and argument 2
				message "&l&6The Ore Game!!!!" to player and argument 2
				wait 5 seconds
				send action bar "{@prefix}The game will start in 50!" to player and argument 2
				message "{@goal}" to player and argument 2
				wait 5 seconds
				send action bar "{@prefix}The game will start in 45!" to player and argument 2
				message "---------------------------------------------" to player and argument 2
				wait 5 seconds
				send action bar "{@prefix}The game will start in 40!" to player and argument 2
				send title "Game will start" with subtitle "With in 40 seconds!" to player and argument 2 for 5 seconds
				wait 5 seconds
				send action bar "{@prefix}The game will start in 35!" to player and argument 2
				message "{@prefix}The game will start in 30 seconds!" to player and argument 2
				wait 5 seconds
				send action bar "{@prefix}The game will start in 30!" to player and argument 2
				message "---------------------------------------------"
				wait 5 seconds
				send action bar "{@prefix}The game will start in 25!" to player and argument 2
				message "{@prefix} Teleporting you to the CAVE! Hold ON!" to player and argument 2
				wait 5 seconds
				send action bar "{@prefix}The game will start in 20!" to player and argument 2
				message "---------------------------------------------"
				wait 5 seconds
				send action bar "{@prefix}The game will start in 15!" to player and argument 2
				teleport player to location at {@xp1}, {@zp1}, {@yp1} in world "{@world}"
				teleport argument 2 to location at {@xp2}, {@zp2}, {@yp2} in world "{@world}"
				wait 5 seconds
				send action bar "{@prefix}The game will start in 10!" to player and argument 2
				give 128 torch to player and argument 2
				message "{@prefix} Some extra torchs for the dark!" to player and argument 2
				send action bar "{@prefix}The game will start in 5!" to player and argument 2
				#launch flickering trailing burst firework colored blue and green at player and argument 2
				loop numbers between 20 and 1:
					if loop-number is 15, 10, 5, 4, 3, 2 or 1:
						send action bar "{@prefix}The game will start in %loop-number% seconds!" to player and argument 2
						#message "{@prefix}The game will start in %loop-number% seconds!" to player
						#message "{@prefix}The game will start in %loop-number% seconds!" to argument 2
						play sound "BLOCK_NOTE_BLOCK_CHIME" with volume 1 and pitch 2 at player for player
						play sound "BLOCK_NOTE_BLOCK_CHIME" with volume 1 and pitch 2 at argument 2 for argument 2
				wait a second
				play sound "ENTITY_PLAYER_LEVELUP" with volume 1 and pitch 2 at player for player
				#message "{@prefix}&lGOOOOOOO" to player and argument 2
				send title "&aGOOOOOOO" with subtitle "GOOOOOOO!" to player and argument 2 for 1 seconds
				launch flickering trailing burst firework colored blue and green at player and argument 2

				set {tog::temp::playing::%argument 2%} to 0
				set {tog::temp::playing::%player%} to 0
				set {tog::temp::time::%player%} to {@time}
				while {tog::temp::playing::%player%} and {tog::temp::playing::%argument 2%} are set:
					wait a second
					subtract 1 second from {tog::temp::time::%player%}
					send action bar "&6&lScores&6: &3%player%: &l%{tog::temp::playing::%player%}% &6| &2%argument 2%: &l%{tog::temp::playing::%argument 2%}% &6| &rTIME: %{tog::temp::time::%player%}%" to player and argument 2
					if {tog::temp::time::%player%} is less than or equal to 0 seconds:
						set {_winner} to ""
						if {tog::temp::playing::%player%} > {tog::temp::playing::%argument 2%}:
							set {_winner} to player
							set {_loser} to argument 2
						else if {tog::temp::playing::%argument 2%} > {tog::temp::playing::%player%}:
							set {_winner} to argument 2
							set {_loser} to player

						if {_winner} is not "":
							play sound "UI_TOAST_CHALLENGE_COMPLETE" with volume 0.2 and pitch 1 at player for player
							play sound "UI_TOAST_CHALLENGE_COMPLETE" with volume 0.2 and pitch 1 at argument 2 for argument 2
							teleport player to {_oldLocation}
							teleport argument 2 to {_oldLocationp2}

							#message "{@prefix}&6&lTake your stuff " to player and argument 2
							#wait 3 second


							#open {_inventory} to player
							#open {_inventoryp2} to argument 2
							send title "&6&lThe winner is " with subtitle "%{_winner}% by %difference between {tog::temp::playing::%{_winner}%} and {tog::temp::playing::%{_loser}%}% points more!" to player and argument 2 for 15 seconds
							#send title "&6&lThe winner is " with subtitle "%{_winner}% receive extra rewards!" to player and argument 2 for 15 seconds

						# Winner
							execute console command "cuscra give %{_winner}% customcrafting:roastedemerlad 1"
							give 1 emerald to {_winner}
							message "{@prefix}&6&lThe winner is %{_winner}% by %difference between {tog::temp::playing::%{_winner}%} and {tog::temp::playing::%{_loser}%}% points more!" to player and argument 2
							#launch flickering trailing burst firework colored blue and green at player and argument 2
							delete {tog::temp::playing::%player%} and {tog::temp::playing::%argument 2%}
							delete {tog::temp::blocks::%player%::*} and {tog::temp::blocks::%argument 2%::*}
							delete {tog::temp::time::%player%}
						else:
		        # If it's a draw, Give rewards to both players
							send title "&6&lIt's a Draw!" with subtitle "No winner this time!" to player and argument 2 for 15 seconds
							give 1 diamond to player
							give 1 diamond to argument 2
							open {_inventory} to player
							open {_inventoryp2} to argument 2

						#Highscores
						if {tog::player::%player%::highscore} is not set:
							set {tog::player::%player%::highscore} to {tog::temp::playing::%player%}
						else if {tog::temp::playing::%player%} > {tog::player::%player%::highscore}:
							set {tog::player::%player%::highscore} to {tog::temp::playing::%player%}
							message "{@prefix}&6&lNEW HIGHSCORE!" to player

						if {tog::player::%argument 2%::highscore} is not set:
							set {tog::player::%argument 2%::highscore} to {tog::temp::playing::%argument 2%}
						else if {tog::temp::playing::%argument 2%} > {tog::player::%argument 2%::highscore}:
							set {tog::player::%argument 2%::highscore} to {tog::temp::playing::%argument 2%}
							message "{@prefix}&6&lNEW HIGHSCORE!" to argument 2

						set {_serverHighScore} to -1
						set {_highestScorer} to ""

						loop all players:
							if {tog::player::%loop-offlineplayer%::highscore} is set:
								if {tog::player::%loop-offlineplayer%::highscore} > {_serverHighScore}:
									set {_serverHighScore} to {tog::player::%loop-offlineplayer%::highscore}
									set {_highestScorer} to "%loop-offlineplayer%"

					if {_serverHighScore} > -1:
						message "{@prefix}&aThe server all-time high score is &l%{_serverHighScore}% &aheld by &l%{_winner}%" to argument 2 and player
						#give 1 diamond pickaxe to {_winner}
						#message "{@prefix}&aCongratulations! You also receive 1 diamond pickaxe as a prize!" to {_winner}
						remove all torch from player
						remove all torch from argument 2
						teleport player to {_oldLocation}
						teleport argument 2 to {_oldLocationp2}
						open {_inventory} to player
						open {_inventoryp2} to argument 2
						message "{@prefix}&aSorry, you can't keep the &ctorchs!" to argument 2 and player
						delete {tog::temp::playing::%player%} and {tog::temp::playing::%argument 2%}
						delete {tog::temp::blocks::%player%::*} and {tog::temp::blocks::%argument 2%::*}
						delete {tog::temp::time::%player%}
						stop

on disconnect:
	if {tog::temp::time::%player%} is bigger than 0 seconds:
		remove all torch from player

on place of copper ore, deepslate copper ore, emerald ore, diamond ore, gold ore, coal ore, iron ore, lapis ore, deepslate emerald ore, deepslate diamond ore, deepslate gold ore, deepslate coal ore, deepslate iron ore, deepslate lapis ore, deepslate redstone ore, or redstone ore:
	if {tog::temp::playing::%player%} is set:
		add location of block to {tog::temp::blocks::%player%::*}
		message "&e[&6The Ore Game&e] &l &CDon't Cheat!!!"

on break of copper ore, deepslate copper ore, emerald ore, diamond ore, gold ore, coal ore, iron ore, lapis ore, deepslate emerald ore, deepslate diamond ore, deepslate gold ore, deepslate coal ore, deepslate iron ore, deepslate lapis ore, deepslate redstone ore, or redstone ore:
	if {tog::temp::playing::%player%} is set:
		if {tog::temp::blocks::%player%::*} contains location of block:
			stop
		play sound "ENTITY_EXPERIENCE_ORB_PICKUP" with volume 1 and pitch 3 at player for player
		if block is an emerald ore:
			add 7 to {tog::temp::playing::%player%}
			message "{@prefix} found a &aemerald ore!"
		else if block is deepslate emerald ore:
			add 7 to {tog::temp::playing::%player%}
			message "{@prefix} found a &a deepslate emerald ore!"
		else if block is diamond ore:
			add 5 to {tog::temp::playing::%player%}
			message "{@prefix} found a &aemerald ore!"
		else if block is gold ore:
			add 3 to {tog::temp::playing::%player%}
			message "{@prefix} found a diamond ore!"
		else if block is lapis ore :
			add 1 to {tog::temp::playing::%player%}
			message "{@prefix} found a lapis ore!"
		else if block is redstone ore :
			add 1 to {tog::temp::playing::%player%}
			message "{@prefix} found a redstone ore!"
		else if block is coal ore:
			add 0.5 to {tog::temp::playing::%player%}
			message "{@prefix} found a coal ore!"
		else if block is iron ore:
			add 0.5 to {tog::temp::playing::%player%}
			message "{@prefix} found a iron ore!"
		else if block is deepslate iron ore:
			add 0.5 to {tog::temp::playing::%player%}
			message "{@prefix} found a deepslate iron ore!"
		else if block is deepslate coal ore:
			add 0.5 to {tog::temp::playing::%player%}
			message "{@prefix} found a deepslate coal ore!"
		else if block is deepslate redstone ore:
			add 1 to {tog::temp::playing::%player%}
			message "{@prefix} found a deepslate redstone ore!"
		else if block is deepslate lapis ore:
			add 1 to {tog::temp::playing::%player%}
			message "{@prefix} found a deepslate lapis ore!"
		else if block is deepslate gold ore:
			add 3 to {tog::temp::playing::%player%}
			message "{@prefix} found a deepslate gold ore!"
		else if block is deepslate diamond ore:
			add 5 to {tog::temp::playing::%player%}
			message "{@prefix} found a deepslate diamond ore!"
		else if block is copper ore:
			add 1 to {tog::temp::playing::%player%}
			message "{@prefix} found a copper ore!"
		else if block is deepslate copper ore:
			add 1 to {tog::temp::playing::%player%}
			message "{@prefix} found a deepslate copper ore!"

command /togreset resethighscore:
    #permission: tog.admin
    trigger:
        delete {tog::player::*}
        message "Highscore for All players has been reset."
